services:
  db:
    image: paradedb/paradedb
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER?}", "-d", "${POSTGRES_DB?}" ]
      start_period: 5s
    environment:
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}

  ollama:
    image: ollama/ollama
    healthcheck:
      test: [ "CMD", "ollama", "ps" ]
      start_period: 5s

  backend:
    build:
      context: backend
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/ready').read()" ]
      start_period: 5s
    environment:
      - LITESTAR_PORT=8000
      - LITESTAR_HOST=0.0.0.0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}
      - CACHE_EXPIRATION_DURATION=${CACHE_EXPIRATION_DURATION?}
      - CACHE_DELETE_EXPIRED_INTERVAL=${CACHE_DELETE_EXPIRED_INTERVAL?}

  frontend:
    build:
      context: frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
      - PUBLIC_SEARCH_RESULTS_PER_PAGE=${PUBLIC_SEARCH_RESULTS_PER_PAGE?}
      - PUBLIC_MAX_SEARCH_RESULT_PAGES=${PUBLIC_MAX_SEARCH_RESULT_PAGES?}
      - PUBLIC_MAX_ITEMS_PER_PAGE=${PUBLIC_MAX_ITEMS_PER_PAGE?}
      - PUBLIC_MAX_SNIPPET_LENGTH=${PUBLIC_MAX_SNIPPET_LENGTH?}
