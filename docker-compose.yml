services:
  db:
    image: paradedb/paradedb
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER?}", "-d", "${POSTGRES_DB?}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "8102:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}

  backend:
    build:
      context: backend
    depends_on:
      db:
        condition: service_healthy
    restart: always
    develop:
      watch:
        - action: sync+restart
          path: backend/app
          target: /backend/app
        - action: rebuild
          path: backend/pyproject.toml
    ports:
      - "8103:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432

  frontend:
    build:
      context: frontend
    restart: always
    develop:
      watch:
        - action: sync
          path: frontend/src
          target: /frontend/src
        - action: rebuild
          path: frontend/package.json
    ports:
      - "8104:5173"
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000

volumes:
  pgdata:
