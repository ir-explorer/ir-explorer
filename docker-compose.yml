services:
  backend:
    build:
      context: backend
    depends_on:
      db:
        condition: service_healthy
    restart: always
    develop:
      watch:
        - action: sync+restart
          path: backend/app
          target: /backend/app
        - action: rebuild
          path: backend/pyproject.toml
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432

  db:
    image: postgres
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER?}", "-d", "${POSTGRES_DB?}" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "8001:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?}
      - POSTGRES_DB=${POSTGRES_DB?}

volumes:
  pgdata:
